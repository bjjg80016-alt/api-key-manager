version: '3.8'

services:
  api-key-manager:
    build: .
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=production
      - PYTHONPATH=/app
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./data:/app/data
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - api-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-key-manager
    restart: unless-stopped
    networks:
      - api-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - api-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=api_manager
      - POSTGRES_USER=api_user
      - POSTGRES_PASSWORD=api_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - api-network

volumes:
  redis_data:
  postgres_data:

networks:
  api-network:
    driver: bridge